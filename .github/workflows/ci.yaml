name: CI-CD-ThreeTierApp

on:
  push:
    branches:
      - main
  pull_request:

env:
  REGISTRY: docker.io
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  NAMESPACE: onetouch

  BACKEND_IMAGE: pankajdevops2403/backend
  FRONTEND_IMAGE: pankajdevops2403/frontend

jobs:
  # ============================
  # Backend Build + Test + Scan
  # ============================
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install & Test Backend
        run: |
          cd backend
          npm install
          npm test

      - name: Run ESLint (SAST) - Backend
        run: |
          cd backend
          npx eslint . || true

      - name: Log in to DockerHub
        run: echo "${{ env.DOCKER_PASSWORD }}" | docker login -u "${{ env.DOCKER_USER }}" --password-stdin

      - name: Build & Push Backend
        run: |
          docker build -t $REGISTRY/${{ env.BACKEND_IMAGE }}:${{ github.sha }} ./backend
          docker push $REGISTRY/${{ env.BACKEND_IMAGE }}:${{ github.sha }}

      - name: Trivy Scan Backend
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: $REGISTRY/${{ env.BACKEND_IMAGE }}:${{ github.sha }}
          format: 'table'
          severity: 'HIGH,CRITICAL'
          exit-code: '0'

  # ============================
  # Frontend Build + Scan
  # ============================
  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install & Build Frontend
        run: |
          cd frontend
          npm install
          npm run build

      - name: Run ESLint (SAST) - Frontend
        run: |
          cd frontend
          npx eslint . || true

      - name: Log in to DockerHub
        run: echo "${{ env.DOCKER_PASSWORD }}" | docker login -u "${{ env.DOCKER_USER }}" --password-stdin

      - name: Build & Push Frontend
        run: |
          docker build -t $REGISTRY/${{ env.FRONTEND_IMAGE }}:${{ github.sha }} ./frontend
          docker push $REGISTRY/${{ env.FRONTEND_IMAGE }}:${{ github.sha }}

      - name: Trivy Scan Frontend
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: $REGISTRY/${{ env.FRONTEND_IMAGE }}:${{ github.sha }}
          format: 'table'
          severity: 'HIGH,CRITICAL'
          exit-code: '0'

  # ============================
  # Deploy Canary (Flagger + Istio)
  # ============================
  deploy:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    steps:
      - uses: actions/checkout@v3

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.29.0'

      - name: Setup Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_CONTENT }}" > $HOME/.kube/config

      - name: Update Backend Canary
        run: |
          kubectl set image deployment/backend \
            backend=$REGISTRY/${{ env.BACKEND_IMAGE }}:${{ github.sha }} -n $NAMESPACE

      - name: Update Frontend Canary
        run: |
          kubectl set image deployment/frontend \
            frontend=$REGISTRY/${{ env.FRONTEND_IMAGE }}:${{ github.sha }} -n $NAMESPACE

      - name: Verify Canary Rollout (Flagger)
        run: |
          kubectl -n $NAMESPACE describe canary backend || true
          kubectl -n $NAMESPACE describe canary frontend || true
